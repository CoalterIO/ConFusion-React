[{"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\App.js":"1","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\App.test.js":"2","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\DishDetailComponent.js":"3","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\FooterComponent.js":"4","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\HeaderComponent.js":"5","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\MainComponent.js":"6","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\MenuComponent.js":"7","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\index.js":"8","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\reportWebVitals.js":"9","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\setupTests.js":"10","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\dishes.js":"11","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\HomeComponent.js":"12","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\ContactComponent.js":"13","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\comments.js":"14","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\leaders.js":"15","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\promotions.js":"16","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\AboutComponent.js":"17","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\configureStore.js":"18","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\ActionCreators.js":"19","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\ActionTypes.js":"20","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\comments.js":"21","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\dishes.js":"22","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\leaders.js":"23","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\promotions.js":"24","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\LoadingComponent.js":"25"},{"size":574,"mtime":1612810979546,"results":"26","hashOfConfig":"27"},{"size":254,"mtime":1611613335641,"results":"28","hashOfConfig":"27"},{"size":7553,"mtime":1613416481665,"results":"29","hashOfConfig":"27"},{"size":2793,"mtime":1612212919111,"results":"30","hashOfConfig":"27"},{"size":5119,"mtime":1612810788128,"results":"31","hashOfConfig":"27"},{"size":3453,"mtime":1613416367342,"results":"32","hashOfConfig":"27"},{"size":2129,"mtime":1613416709928,"results":"33","hashOfConfig":"27"},{"size":659,"mtime":1612212171585,"results":"34","hashOfConfig":"27"},{"size":375,"mtime":1611613335645,"results":"35","hashOfConfig":"27"},{"size":246,"mtime":1611613335646,"results":"36","hashOfConfig":"27"},{"size":1490,"mtime":1612213052225,"results":"37","hashOfConfig":"27"},{"size":1491,"mtime":1613416583862,"results":"38","hashOfConfig":"27"},{"size":10905,"mtime":1612813048415,"results":"39","hashOfConfig":"27"},{"size":4279,"mtime":1612213098250,"results":"40","hashOfConfig":"27"},{"size":2382,"mtime":1612213086845,"results":"41","hashOfConfig":"27"},{"size":445,"mtime":1612213071891,"results":"42","hashOfConfig":"27"},{"size":4226,"mtime":1612217870695,"results":"43","hashOfConfig":"27"},{"size":611,"mtime":1613416102303,"results":"44","hashOfConfig":"27"},{"size":795,"mtime":1613416131209,"results":"45","hashOfConfig":"27"},{"size":178,"mtime":1613416113620,"results":"46","hashOfConfig":"27"},{"size":505,"mtime":1613415498331,"results":"47","hashOfConfig":"27"},{"size":642,"mtime":1613416158689,"results":"48","hashOfConfig":"27"},{"size":185,"mtime":1613415390522,"results":"49","hashOfConfig":"27"},{"size":197,"mtime":1613415368892,"results":"50","hashOfConfig":"27"},{"size":256,"mtime":1613416182300,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14q5rvv",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\App.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\App.test.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\DishDetailComponent.js",["105","106","107"],"import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-comment fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: '',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comments\" id=\"comments\" name=\"comments\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"6\">\r\n                                    </Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 0 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, addComment, dishId }) {\r\n    var options = { month: \"short\", day: \"numeric\", year: \"numeric\" }\r\n    if (comments != null)\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p> -- {comment.author}, {new Date(comment.date).toLocaleDateString(\"en-US\", options)}</p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <CommentForm dishId={dishId} addComment={addComment} />\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nexport default DishDetail","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\index.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\setupTests.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\ContactComponent.js",["108","109","110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" href=\"#skype\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\dishes.js",["115"],"import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\Coalter\\Documents\\coursera\\front end with react\\confusion\\src\\components\\LoadingComponent.js",[],{"ruleId":"116","severity":1,"message":"117","line":48,"column":37,"nodeType":"118","endLine":49,"endColumn":66},{"ruleId":"116","severity":1,"message":"119","line":61,"column":37,"nodeType":"118","endLine":67,"endColumn":39},{"ruleId":"116","severity":1,"message":"120","line":83,"column":37,"nodeType":"118","endLine":85,"endColumn":50},{"ruleId":"116","severity":1,"message":"119","line":77,"column":37,"nodeType":"118","endLine":83,"endColumn":39},{"ruleId":"116","severity":1,"message":"119","line":99,"column":37,"nodeType":"118","endLine":105,"endColumn":39},{"ruleId":"116","severity":1,"message":"119","line":121,"column":37,"nodeType":"118","endLine":127,"endColumn":39},{"ruleId":"116","severity":1,"message":"119","line":144,"column":37,"nodeType":"118","endLine":150,"endColumn":39},{"ruleId":"116","severity":1,"message":"121","line":166,"column":45,"nodeType":"118","endLine":168,"endColumn":47},{"ruleId":"116","severity":1,"message":"117","line":174,"column":37,"nodeType":"118","endLine":175,"endColumn":66},{"ruleId":"116","severity":1,"message":"120","line":184,"column":37,"nodeType":"118","endLine":186,"endColumn":68},{"ruleId":"122","severity":1,"message":"123","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":16},"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'DISHES' is defined but never used.","Identifier","unusedVar"]